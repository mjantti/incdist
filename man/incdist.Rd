% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/incdist.R
\name{incdist}
\alias{incdist}
\alias{incdist.default}
\alias{incdist.formula}
\alias{summary.incdist}
\alias{print.summary.incdist}
\alias{plot.summary.incdist}
\title{An income distribution object}
\usage{
incdist(x, ...)
}
\arguments{
\item{formula}{a one-or two-sided formula that defines the resource
variables of interest.}

\item{weights}{sampling weights.}

\item{data}{a data frame that holds the data.}

\item{subset}{defines a subset of the data to be used.}

\item{eqsale}{defines a transformation of each resource variable. Defaults
to NULL, that is, no transformation.}

\item{group}{a one-sided formula that defines the grouping structure.}

\item{part}{a one-sided formula that defines breaks in the data, for which
analyses are done separately.}

\item{idvar}{a one-sided formula that auxiliary variables to be kept in the
resulting object, for instance, variables needed for equivalence scale
transformation or deflating the analysis variables.}

\item{na.rm}{a logical indicating if only complete cases should be used.}

\item{func}{a character vector giving which income distribution functionals
to calculate.}
}
\value{
An object of class incdist.
}
\description{
This function creates an object of class incdist that can be used to
facilitate income distribution analysis.
}
\details{
The incdist object can be summarized, and the summary can be printed and
plotted (plotting is currently broken).
}
\examples{

## generate some data
## income components
n <- 1000
x1 <- runif(n)
x2 <- rexp(n)
a <- ifelse(a <- rpois(n, 1), a, 1)
c <- rpois(n, 2)
## sum to total income
y1 <- x1 + x2
## generate a grouping
g <- factor(rbinom(n, 1, .5), labels = letters[1:2])
## generate a partitioning variable
p <- factor(sample(c(1, 2, 3), n, replace = TRUE),
            labels = paste("t", 1:3, sep = ""))
## generate some weights
w <- rpois(n, 5)
## put it all into a data frame
test.d <- data.frame(x1, x2, y1, g, p, a, c, w)

summary(incdist(y1 ~ x1 +  x2, data=test.d, group = ~ g))
summary(incdist(y1 ~ x1 +  x2, data=test.d, part = ~ p))
id.0 <- incdist(y1 ~ x1 +  x2, data=test.d, part = ~ p, group = ~ g,
                idvar = ~ a + c,  weights = w)
id.0$eqscale <- list(formula = ~ (a + k*c)^d, coef=list(k=.8, d=.75),
             type="citro-michael")

print(summary(id.0, equivalise = FALSE), all = TRUE)
print(summary(id.0, equivalise = TRUE), all = TRUE) # the default
print(id.0)
## there is not such function: plot(id.0)

}
\author{
Markus Jantti \email{markus.jantti@iki.fi}
}
